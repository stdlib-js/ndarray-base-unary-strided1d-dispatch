"use strict";var b=function(r,e){return function(){return e||r((e={exports:{}}).exports,e),e.exports}};var k=b(function(fr,Q){Q.exports={dims:null}});var D=b(function(yr,V){"use strict";var W=require("@stdlib/assert-is-plain-object"),F=require("@stdlib/assert-has-own-property"),X=require("@stdlib/assert-is-integer-array").primitives,Y=require("@stdlib/assert-is-empty-collection"),Z=require("@stdlib/ndarray-base-to-unique-normalized-indices"),O=require("@stdlib/array-base-join"),$=require("@stdlib/array-base-assert-contains"),c=require("@stdlib/string-format");function M(r,e,a,n){var i;if(!W(n))return new TypeError(c("invalid argument. Options argument must be an object. Value: `%s`.",n));if(F(n,"dims")){if(r.dims=n.dims,!X(r.dims)&&!Y(r.dims))return new TypeError(c("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",r.dims));if(i=Z(r.dims,e-1),i===null)return new RangeError(c("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",O(r.dims,",")));if(i.length!==r.dims.length)return new Error(c("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",O(r.dims,",")));r.dims=i}return F(n,"dtype")&&(r.dtype=n.dtype,!$(a,r.dtype))?new TypeError(c('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"dtype",O(a,'", "'),r.dtype)):null}V.exports=M});var S=b(function(hr,A){"use strict";function rr(r,e,a,n,i,s,o,m,f){var l,p,u,v;for(l=s,u=0;u<r;u++){for(p=f,v=0;v<e&&a[l+v*i]===o[p];v++)p+=m;if(v===e)return u;l+=n}return-1}A.exports=rr});var K=b(function(gr,J){"use strict";var I=require("@stdlib/utils-define-nonenumerable-read-only-property"),x=require("@stdlib/assert-has-property"),E=require("@stdlib/assert-is-ndarray-like"),er=require("@stdlib/assert-is-object"),tr=require("@stdlib/assert-is-function"),T=require("@stdlib/assert-is-collection"),C=require("@stdlib/assert-is-empty-collection"),ir=require("@stdlib/assert-is-function-array"),P=require("@stdlib/array-base-assert-is-data-type"),ar=require("@stdlib/ndarray-base-assert-is-output-data-type-policy"),_=require("@stdlib/array-base-assert-contains"),N=require("@stdlib/ndarray-base-unary-strided1d"),nr=require("@stdlib/ndarray-base-unary-output-dtype"),w=require("@stdlib/ndarray-base-dtype-resolve-enum"),sr=require("@stdlib/ndarray-shape"),ur=require("@stdlib/ndarray-ndims"),g=require("@stdlib/ndarray-base-dtype"),or=require("@stdlib/ndarray-base-order"),dr=require("@stdlib/ndarray-empty"),R=require("@stdlib/array-base-zero-to"),j=require("@stdlib/array-base-join"),vr=require("@stdlib/array-base-copy"),z=require("@stdlib/array-base-every-by"),B=require("@stdlib/object-assign"),d=require("@stdlib/string-format"),L=k(),U=D(),G=S();function lr(r){var e,a;for(e=[],a=0;a<r.length;a++)e.push(w(r[a]));return e}function H(r,e,a){var n,i,s;for(n=[],i=0,s=0;i<=r;i++)i===1?n.push(a):(n.push(e[s]),s+=1);return n}function q(r,e,a,n){var i,s;if(!(this instanceof q))return new q(r,e,a,n);if(!er(r))throw new TypeError(d("invalid argument. First argument must be an object. Value: `%s`.",r));if(!tr(r.default))throw new TypeError(d('invalid argument. First argument must be an object having a "default" property and an associated method.'));if(x(r,"types")&&!T(r.types)&&!C(r.types))throw new TypeError(d('invalid argument. First argument must be an object having a "types" property whose associated value is an array-like object.'));if(x(r,"fcns")&&!ir(r.fcns)&&!C(r.fcns))throw new TypeError(d('invalid argument. First argument must be an object having a "fcns" property whose associated value is an array-like object containing functions.'));if(!T(e))throw new TypeError(d("invalid argument. Second argument must be an array-like object. Value: `%s`.",e));for(s=0;s<e.length;s++)if(i=e[s],!T(i)||i.length<1||!z(i,P))throw new TypeError(d("invalid argument. Second argument must contain arrays of data types. Value: `%s`.",e));if(!T(a)||a.length<1||!z(a,P))throw new TypeError(d("invalid argument. Third argument must be an array of data types. Value: `%s`.",a));if(!ar(n))throw new TypeError(d("invalid argument. Fourth argument must be a supported output data type policy. Value: `%s`.",n));if(this._table={default:r.default,types:r.types?lr(r.types):[],fcns:r.fcns?vr(r.fcns):[]},this._table.types.length!==this._table.fcns.length*2)throw new Error("invalid argument. First argument specifies an unexpected number of types. A pair of input and output ndarray data types must be specified for each provided strided function.");return this._idtypes=e,this._odtypes=a,this._policy=n,this}I(q.prototype,"apply",function(e){var a,n,i,s,o,m,f,l,p,u,v,h,y,t;if(i=arguments.length,!E(e))throw new TypeError(d("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",e));if(u=g(e),!_(this._idtypes[0],u))throw new TypeError(d('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',j(this._idtypes[0],'", "'),u));for(s=[e],t=1;t<i&&(l=arguments[t],!!E(l));t++){if(u=g(l),!_(this._idtypes[t],u))throw new TypeError(d('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',t,j(this._idtypes[t],'", "'),u));s.push(l)}if(t<i-1)throw new TypeError(d("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",t,arguments[t]));if(f=sr(e),h=f.length,o=B({},L),i>t&&(a=arguments[i-1],m=U(o,h,this._odtypes,a),m))throw m;return o.dims===null&&(o.dims=R(h)),y=dr(f,{dtype:o.dtype||nr(u,this._policy),order:or(e)}),n=[w(u),w(g(y))],p=G(this._table.fcns.length,2,this._table.types,2,1,0,n,1,0),p>=0?v=this._table.fcns[p]:v=this._table.default,N(v,H(s.length,s,y),o.dims),y});I(q.prototype,"assign",function(e){var a,n,i,s,o,m,f,l,p,u,v,h,y,t;if(i=arguments.length,!E(e))throw new TypeError(d("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",e));if(u=g(e),!_(this._idtypes[0],u))throw new TypeError(d('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',j(this._idtypes[0],'", "'),u));for(o=[e],t=1;t<i&&(m=arguments[t],!!E(m));t++)o.push(m);if(t<2)throw new TypeError(d("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",arguments[1]));if(t===i-1)a=arguments[t],l=!0;else if(t<i-1)throw new TypeError(d("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",t,arguments[t]));for(t=1;t<o.length-1;t++)if(u=g(o[t]),!_(this._idtypes[t],u))throw new TypeError(d('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',t,j(this._idtypes[t],'", "'),u));if(v=ur(e),s=B({},L),l&&(f=U(s,v,this._odtypes,a),f))throw f;return s.dims===null&&(s.dims=R(v)),y=o[o.length-1],n=[w(u),w(g(y))],p=G(this._table.fcns.length,2,this._table.types,2,1,0,n,1,0),p>=0?h=this._table.fcns[p]:h=this._table.default,N(h,H(o.length-1,o,y),s.dims),y});J.exports=q});var pr=K();module.exports=pr;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map

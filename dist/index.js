"use strict";var b=function(r,e){return function(){return e||r((e={exports:{}}).exports,e),e.exports}};var k=b(function(fr,Q){Q.exports={dims:null}});var D=b(function(yr,V){"use strict";var W=require("@stdlib/assert-is-plain-object"),F=require("@stdlib/assert-has-own-property"),X=require("@stdlib/assert-is-integer-array").primitives,Y=require("@stdlib/assert-is-empty-collection"),Z=require("@stdlib/ndarray-base-to-unique-normalized-indices"),O=require("@stdlib/array-base-join"),$=require("@stdlib/array-base-assert-contains"),c=require("@stdlib/string-format");function M(r,e,i,n){var a;if(!W(n))return new TypeError(c("invalid argument. Options argument must be an object. Value: `%s`.",n));if(F(n,"dims")){if(r.dims=n.dims,!X(r.dims)&&!Y(r.dims))return new TypeError(c("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",r.dims));if(a=Z(r.dims,e-1),a===null)return new RangeError(c("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",O(r.dims,",")));if(a.length!==r.dims.length)return new Error(c("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",O(r.dims,",")));r.dims=a}return F(n,"dtype")&&(r.dtype=n.dtype,!$(i,r.dtype))?new TypeError(c('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"dtype",O(i,'", "'),r.dtype)):null}V.exports=M});var S=b(function(hr,A){"use strict";function rr(r,e,i,n,a,o,d,m,f){var p,l,s,v;for(p=o,s=0;s<r;s++){for(l=f,v=0;v<e&&i[p+v*a]===d[l];v++)l+=m;if(v===e)return s;p+=n}return-1}A.exports=rr});var K=b(function(gr,J){"use strict";var I=require("@stdlib/utils-define-nonenumerable-read-only-property"),x=require("@stdlib/assert-has-property"),E=require("@stdlib/assert-is-ndarray-like"),er=require("@stdlib/assert-is-object"),tr=require("@stdlib/assert-is-function"),T=require("@stdlib/assert-is-collection"),C=require("@stdlib/assert-is-empty-collection"),ir=require("@stdlib/assert-is-function-array"),P=require("@stdlib/array-base-assert-is-data-type"),ar=require("@stdlib/ndarray-base-assert-is-output-data-type-policy"),_=require("@stdlib/array-base-assert-contains"),N=require("@stdlib/ndarray-base-unary-strided1d"),nr=require("@stdlib/ndarray-base-unary-output-dtype"),w=require("@stdlib/ndarray-base-dtype-resolve-enum"),sr=require("@stdlib/ndarray-shape"),ur=require("@stdlib/ndarray-ndims"),g=require("@stdlib/ndarray-base-dtype"),or=require("@stdlib/ndarray-base-order"),dr=require("@stdlib/ndarray-empty"),R=require("@stdlib/array-base-zero-to"),j=require("@stdlib/array-base-join"),vr=require("@stdlib/array-base-copy"),z=require("@stdlib/array-base-every-by"),B=require("@stdlib/object-assign"),u=require("@stdlib/string-format"),L=k(),U=D(),G=S();function pr(r){var e,i;for(e=[],i=0;i<r.length;i++)e.push(w(r[i]));return e}function H(r,e){var i,n,a;for(i=[],n=0,a=0;n<=r.length;n++)n===1?i.push(e):(i.push(r[a]),a+=1);return i}function q(r,e,i,n){var a,o;if(!(this instanceof q))return new q(r,e,i,n);if(!er(r))throw new TypeError(u("invalid argument. First argument must be an object. Value: `%s`.",r));if(!tr(r.default))throw new TypeError(u('invalid argument. First argument must be an object having a "default" property and an associated method.'));if(x(r,"types")&&!T(r.types)&&!C(r.types))throw new TypeError(u('invalid argument. First argument must be an object having a "types" property whose associated value is an array-like object.'));if(x(r,"fcns")&&!ir(r.fcns)&&!C(r.fcns))throw new TypeError(u('invalid argument. First argument must be an object having a "fcns" property whose associated value is an array-like object containing functions.'));if(!T(e))throw new TypeError(u("invalid argument. Second argument must be an array-like object. Value: `%s`.",e));for(o=0;o<e.length;o++)if(a=e[o],!T(a)||a.length<1||!z(a,P))throw new TypeError(u("invalid argument. Second argument must contain arrays of data types. Value: `%s`.",e));if(!T(i)||i.length<1||!z(i,P))throw new TypeError(u("invalid argument. Third argument must be an array of data types. Value: `%s`.",i));if(!ar(n))throw new TypeError(u("invalid argument. Fourth argument must be a supported output data type policy. Value: `%s`.",n));if(this._table={default:r.default,types:r.types?pr(r.types):[],fcns:r.fcns?vr(r.fcns):[]},this._table.types.length!==this._table.fcns.length*2)throw new Error("invalid argument. First argument specifies an unexpected number of types. A pair of input and output ndarray data types must be specified for each provided strided function.");return this._idtypes=e,this._odtypes=i,this._policy=n,this}I(q.prototype,"apply",function(e){var i,n,a,o,d,m,f,p,l,s,v,h,y,t;if(a=arguments.length,!E(e))throw new TypeError(u("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",e));if(s=g(e),!_(this._idtypes[0],s))throw new TypeError(u('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',j(this._idtypes[0],'", "'),s));for(o=[e],t=1;t<a&&(p=arguments[t],!!E(p));t++){if(s=g(p),!_(this._idtypes[t],s))throw new TypeError(u('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',t,j(this._idtypes[t],'", "'),s));o.push(p)}if(t<a-1)throw new TypeError(u("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",t,arguments[t]));if(f=sr(e),h=f.length,d=B({},L),a>t&&(i=arguments[a-1],m=U(d,h,this._odtypes,i),m))throw m;return d.dims===null&&(d.dims=R(h)),y=dr(f,{dtype:d.dtype||nr(s,this._policy),order:or(e)}),n=[w(s),w(g(y))],l=G(this._table.fcns.length,2,this._table.types,2,1,0,n,1,0),l>=0?v=this._table.fcns[l]:v=this._table.default,N(v,H(o,y),d.dims),y});I(q.prototype,"assign",function(e){var i,n,a,o,d,m,f,p,l,s,v,h,y,t;if(a=arguments.length,!E(e))throw new TypeError(u("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",e));if(s=g(e),!_(this._idtypes[0],s))throw new TypeError(u('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',j(this._idtypes[0],'", "'),s));for(d=[e],t=1;t<a&&(m=arguments[t],!!E(m));t++)d.push(m);if(t<2)throw new TypeError(u("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",arguments[1]));if(t===a-1)i=arguments[t],p=!0;else if(t<a-1)throw new TypeError(u("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",t,arguments[t]));for(y=d.pop(),t=1;t<d.length;t++)if(s=g(d[t]),!_(this._idtypes[t],s))throw new TypeError(u('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',t,j(this._idtypes[t],'", "'),s));if(v=ur(e),o=B({},L),p&&(f=U(o,v,this._odtypes,i),f))throw f;return o.dims===null&&(o.dims=R(v)),n=[w(s),w(g(y))],l=G(this._table.fcns.length,2,this._table.types,2,1,0,n,1,0),l>=0?h=this._table.fcns[l]:h=this._table.default,N(h,H(d,y),o.dims),y});J.exports=q});var lr=K();module.exports=lr;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map

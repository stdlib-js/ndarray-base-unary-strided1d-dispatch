"use strict";var _=function(e,r){return function(){return r||e((r={exports:{}}).exports,r),r.exports}};var D=_(function(qr,rr){rr.exports={dims:null}});var C=_(function(br,S){"use strict";var er=require("@stdlib/assert-is-plain-object"),A=require("@stdlib/assert-has-own-property"),tr=require("@stdlib/assert-is-integer-array").primitives,ar=require("@stdlib/assert-is-empty-collection"),ir=require("@stdlib/ndarray-base-to-unique-normalized-indices"),V=require("@stdlib/array-base-join"),nr=require("@stdlib/array-base-assert-contains"),b=require("@stdlib/string-format");function sr(e,r,i,t){var s;if(!er(t))return new TypeError(b("invalid argument. Options argument must be an object. Value: `%s`.",t));if(A(t,"dims")){if(e.dims=t.dims,!tr(e.dims)&&!ar(e.dims))return new TypeError(b("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",e.dims));if(s=ir(e.dims,r-1),s===null)return new RangeError(b("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",V(e.dims,",")));if(s.length!==e.dims.length)return new Error(b("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",V(e.dims,",")));e.dims=s}return A(t,"dtype")&&(e.dtype=t.dtype,!nr(i,e.dtype))?new TypeError(b('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"dtype",V(i,'", "'),e.dtype)):null}S.exports=sr});var P=_(function(Tr,I){"use strict";function ur(e,r,i,t,s,v,n,g,y){var l,u,m,d;for(l=v,m=0;m<e;m++){for(u=y,d=0;d<r&&i[l+d*s]===n[u];d++)u+=g;if(d===r)return m;l+=t}return-1}I.exports=ur});var x=_(function(_r,M){"use strict";var G=require("@stdlib/utils-define-nonenumerable-read-only-property"),z=require("@stdlib/assert-has-property"),j=require("@stdlib/assert-is-ndarray-like"),N=require("@stdlib/assert-is-object"),or=require("@stdlib/assert-is-function"),E=require("@stdlib/assert-is-collection"),R=require("@stdlib/assert-is-empty-collection"),dr=require("@stdlib/assert-is-function-array"),B=require("@stdlib/ndarray-base-assert-is-data-type"),vr=require("@stdlib/ndarray-base-assert-is-output-data-type-policy"),pr=require("@stdlib/ndarray-base-assert-is-input-casting-policy"),F=require("@stdlib/array-base-assert-contains"),L=require("@stdlib/ndarray-base-unary-strided1d"),mr=require("@stdlib/ndarray-base-unary-output-dtype"),H=require("@stdlib/ndarray-base-unary-input-casting-dtype"),T=require("@stdlib/ndarray-base-dtype-resolve-enum"),J=require("@stdlib/ndarray-shape"),lr=require("@stdlib/ndarray-ndims"),w=require("@stdlib/ndarray-base-dtype"),k=require("@stdlib/ndarray-base-order"),fr=require("@stdlib/ndarray-base-assign"),K=require("@stdlib/ndarray-base-empty"),yr=require("@stdlib/ndarray-empty"),Q=require("@stdlib/array-base-zero-to"),O=require("@stdlib/array-base-join"),gr=require("@stdlib/array-base-copy"),W=require("@stdlib/array-base-insert-at"),U=require("@stdlib/array-base-every-by"),X=require("@stdlib/object-assign"),o=require("@stdlib/string-format"),Y=D(),Z=C(),$=P();function hr(e){var r,i;for(r=[],i=0;i<e.length;i++)r.push(T(e[i]));return r}function q(e,r,i,t,s){var v,n;if(!(this instanceof q))return arguments.length>4?new q(e,r,i,t,s):new q(e,r,i,t);if(!N(e))throw new TypeError(o("invalid argument. First argument must be an object. Value: `%s`.",e));if(!or(e.default))throw new TypeError(o('invalid argument. First argument must be an object having a "default" property and an associated method.'));if(z(e,"types")&&!E(e.types)&&!R(e.types))throw new TypeError(o('invalid argument. First argument must be an object having a "types" property whose associated value is an array-like object.'));if(z(e,"fcns")&&!dr(e.fcns)&&!R(e.fcns))throw new TypeError(o('invalid argument. First argument must be an object having a "fcns" property whose associated value is an array-like object containing functions.'));if(!E(r))throw new TypeError(o("invalid argument. Second argument must be an array-like object. Value: `%s`.",r));for(n=0;n<r.length;n++)if(v=r[n],!E(v)||v.length<1||!U(v,B))throw new TypeError(o("invalid argument. Second argument must contain arrays of data types. Value: `%s`.",r));if(!E(i)||i.length<1||!U(i,B))throw new TypeError(o("invalid argument. Third argument must be an array of data types. Value: `%s`.",i));if(!N(t))throw new TypeError(o("invalid argument. Fourth argument must be an object. Value: `%s`.",t));if(!vr(t.output))throw new TypeError(o("invalid argument. Fourth argument must be an object having a supported output data type policy. Value: `%s`.",t.output));if(!pr(t.casting))throw new TypeError(o("invalid argument. Fourth argument must be an object having a supported casting policy. Value: `%s`.",t.casting));if(this._table={default:e.default,types:e.types?hr(e.types):[],fcns:e.fcns?gr(e.fcns):[]},this._table.types.length!==this._table.fcns.length*2)throw new Error("invalid argument. First argument specifies an unexpected number of types. A pair of input and output ndarray data types must be specified for each provided strided function.");return this._idtypes=r,this._odtypes=i,this._policies={output:t.output,casting:t.casting},arguments.length>4?this._apply=L.factory(s):this._apply=L,this}G(q.prototype,"apply",function(r){var i,t,s,v,n,g,y,l,u,m,d,f,c,h,a,p;if(s=arguments.length,!j(r))throw new TypeError(o("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",r));if(u=w(r),!F(this._idtypes[0],u))throw new TypeError(o('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',O(this._idtypes[0],'", "'),u));for(v=[r],p=1;p<s&&(l=arguments[p],!!j(l));p++){if(f=w(l),!F(this._idtypes[p],f))throw new TypeError(o('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',p,O(this._idtypes[p],'", "'),f));v.push(l)}if(p<s-1)throw new TypeError(o("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",p,arguments[p]));if(y=J(r),h=y.length,n=X({},Y),s>p&&(i=arguments[s-1],g=Z(n,h,this._odtypes,i),g))throw g;return n.dims===null&&(n.dims=Q(h)),m=n.dtype||mr(u,this._policies.output),a=yr(y,{dtype:m,order:k(r)}),f=H(u,m,this._policies.casting),u!==f&&(d=K(f,y,k(r)),fr([r,d]),v[0]=d,u=f),t=[T(u),T(m)],p=$(this._table.fcns.length,2,this._table.types,2,1,0,t,1,0),p>=0?c=this._table.fcns[p]:c=this._table.default,this._apply(c,W(v,1,a),n.dims),a});G(q.prototype,"assign",function e(r){var i,t,s,v,n,g,y,l,u,m,d,f,c,h,a;if(s=arguments.length,!j(r))throw new TypeError(o("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",r));if(u=w(r),!F(this._idtypes[0],u))throw new TypeError(o('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',O(this._idtypes[0],'", "'),u));for(n=[r],a=1;a<s&&(g=arguments[a],!!j(g));a++)n.push(g);if(a<2)throw new TypeError(o("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",arguments[1]));if(a===s-1)i=arguments[a],l=!0;else if(a<s-1)throw new TypeError(o("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",a,arguments[a]));for(h=n.pop(),a=1;a<n.length;a++)if(d=w(n[a]),!F(this._idtypes[a],d))throw new TypeError(o('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',a,O(this._idtypes[a],'", "'),d));if(f=lr(r),v=X({},Y),l&&(y=Z(v,f,this._odtypes,i),y))throw y;return v.dims===null&&(v.dims=Q(f)),d=H(u,w(h),this._policies.casting),u!==d&&(m=K(d,J(r),k(r)),e([r,m]),n[0]=m,u=d),t=[T(d),T(w(h))],a=$(this._table.fcns.length,2,this._table.types,2,1,0,t,1,0),a>=0?c=this._table.fcns[a]:c=this._table.default,this._apply(c,W(n,1,h),v.dims),h});M.exports=q});var cr=x();module.exports=cr;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map

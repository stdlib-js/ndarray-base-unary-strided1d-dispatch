"use strict";var j=function(e,t){return function(){return t||e((t={exports:{}}).exports,t),t.exports}};var k=j(function(gr,Z){Z.exports={dims:null}});var S=j(function(fr,A){"use strict";var $=require("@stdlib/assert-is-plain-object"),D=require("@stdlib/assert-has-own-property"),x=require("@stdlib/assert-is-integer-array").primitives,rr=require("@stdlib/assert-is-empty-collection"),er=require("@stdlib/ndarray-base-to-unique-normalized-indices"),F=require("@stdlib/array-base-join"),tr=require("@stdlib/array-base-assert-contains"),w=require("@stdlib/string-format");function ar(e,t,u,a){var s;if(!$(a))return new TypeError(w("invalid argument. Options argument must be an object. Value: `%s`.",a));if(D(a,"dims")){if(e.dims=a.dims,!x(e.dims)&&!rr(e.dims))return new TypeError(w("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",e.dims));if(s=er(e.dims,t-1),s===null)return new RangeError(w("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",F(e.dims,",")));if(s.length!==e.dims.length)return new Error(w("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",F(e.dims,",")));e.dims=s}return D(a,"dtype")&&(e.dtype=a.dtype,!tr(u,e.dtype))?new TypeError(w('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"dtype",F(u,'", "'),e.dtype)):null}A.exports=ar});var Y=j(function(hr,X){"use strict";var B=require("@stdlib/utils-define-nonenumerable-read-only-property"),C=require("@stdlib/assert-has-property"),_=require("@stdlib/assert-is-ndarray-like"),I=require("@stdlib/assert-is-object"),ir=require("@stdlib/assert-is-function"),b=require("@stdlib/assert-is-collection"),P=require("@stdlib/assert-is-empty-collection"),nr=require("@stdlib/assert-is-function-array"),R=require("@stdlib/ndarray-base-assert-is-data-type"),sr=require("@stdlib/ndarray-base-assert-is-output-data-type-policy"),ur=require("@stdlib/ndarray-base-assert-is-input-casting-policy"),T=require("@stdlib/array-base-assert-contains"),z=require("@stdlib/ndarray-base-unary-strided1d"),or=require("@stdlib/ndarray-base-unary-output-dtype"),L=require("@stdlib/ndarray-base-unary-input-casting-dtype"),V=require("@stdlib/ndarray-base-dtypes2enums"),U=require("@stdlib/ndarray-shape"),dr=require("@stdlib/ndarray-ndims"),q=require("@stdlib/ndarray-base-dtype"),O=require("@stdlib/ndarray-base-order"),pr=require("@stdlib/ndarray-base-assign"),G=require("@stdlib/ndarray-base-empty"),vr=require("@stdlib/ndarray-empty"),H=require("@stdlib/array-base-zero-to"),E=require("@stdlib/array-base-join"),mr=require("@stdlib/array-base-copy"),J=require("@stdlib/array-base-insert-at"),N=require("@stdlib/array-base-every-by"),K=require("@stdlib/blas-ext-base-gindex-of-row").ndarray,M=require("@stdlib/object-assign"),n=require("@stdlib/string-format"),Q=k(),W=S();function c(e,t,u,a,s){var i,p;if(!(this instanceof c))return arguments.length>4?new c(e,t,u,a,s):new c(e,t,u,a);if(!I(e))throw new TypeError(n("invalid argument. First argument must be an object. Value: `%s`.",e));if(!ir(e.default))throw new TypeError(n('invalid argument. First argument must be an object having a "default" property and an associated method.'));if(C(e,"types")&&!b(e.types)&&!P(e.types))throw new TypeError(n('invalid argument. First argument must be an object having a "types" property whose associated value is an array-like object.'));if(C(e,"fcns")&&!nr(e.fcns)&&!P(e.fcns))throw new TypeError(n('invalid argument. First argument must be an object having a "fcns" property whose associated value is an array-like object containing functions.'));if(!b(t))throw new TypeError(n("invalid argument. Second argument must be an array-like object. Value: `%s`.",t));for(p=0;p<t.length;p++)if(i=t[p],!b(i)||i.length<1||!N(i,R))throw new TypeError(n("invalid argument. Second argument must contain arrays of data types. Value: `%s`.",t));if(!b(u)||u.length<1||!N(u,R))throw new TypeError(n("invalid argument. Third argument must be an array of data types. Value: `%s`.",u));if(!I(a))throw new TypeError(n("invalid argument. Fourth argument must be an object. Value: `%s`.",a));if(!sr(a.output))throw new TypeError(n("invalid argument. Fourth argument must be an object having a supported output data type policy. Value: `%s`.",a.output));if(!ur(a.casting))throw new TypeError(n("invalid argument. Fourth argument must be an object having a supported casting policy. Value: `%s`.",a.casting));if(this._table={default:e.default,types:e.types?V(e.types):[],fcns:e.fcns?mr(e.fcns):[]},this._table.types.length!==this._table.fcns.length*2)throw new Error("invalid argument. First argument specifies an unexpected number of types. A pair of input and output ndarray data types must be specified for each provided strided function.");return this._idtypes=t,this._odtypes=u,this._policies={output:a.output,casting:a.casting},arguments.length>4?this._apply=z.factory(s):this._apply=z,this}B(c.prototype,"apply",function(t){var u,a,s,i,p,v,y,o,m,g,d,f,h,l,r;if(a=arguments.length,!_(t))throw new TypeError(n("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",t));if(o=q(t),!T(this._idtypes[0],o))throw new TypeError(n('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',E(this._idtypes[0],'", "'),o));for(s=[t],r=1;r<a&&(y=arguments[r],!!_(y));r++){if(d=q(y),!T(this._idtypes[r],d))throw new TypeError(n('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',r,E(this._idtypes[r],'", "'),d));s.push(y)}if(r<a-1)throw new TypeError(n("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",r,arguments[r]));if(v=U(t),h=v.length,i=M({},Q),a>r&&(u=arguments[a-1],p=W(i,h,this._odtypes,u),p))throw p;return i.dims===null&&(i.dims=H(h)),m=i.dtype||or(o,this._policies.output),l=vr(v,{dtype:m,order:O(t)}),d=L(o,m,this._policies.casting),o!==d&&(g=G(d,v,O(t)),pr([t,g]),s[0]=g,o=d),r=K(this._table.fcns.length,2,this._table.types,2,1,0,V([o,m]),1,0),r>=0?f=this._table.fcns[r]:f=this._table.default,this._apply(f,J(s,1,l),i.dims),l});B(c.prototype,"assign",function e(t){var u,a,s,i,p,v,y,o,m,g,d,f,h,l,r;if(a=arguments.length,!_(t))throw new TypeError(n("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",t));if(o=q(t),!T(this._idtypes[0],o))throw new TypeError(n('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',E(this._idtypes[0],'", "'),o));for(i=[t],r=1;r<a&&(p=arguments[r],!!_(p));r++)i.push(p);if(r<2)throw new TypeError(n("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",arguments[1]));if(r===a-1)u=arguments[r],y=!0;else if(r<a-1)throw new TypeError(n("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",r,arguments[r]));for(l=i.pop(),r=1;r<i.length;r++)if(d=q(i[r]),!T(this._idtypes[r],d))throw new TypeError(n('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',r,E(this._idtypes[r],'", "'),d));if(f=dr(t),s=M({},Q),y&&(v=W(s,f,this._odtypes,u),v))throw v;return s.dims===null&&(s.dims=H(f)),m=q(l),d=L(o,m,this._policies.casting),o!==d&&(g=G(d,U(t),O(t)),e([t,g]),i[0]=g,o=d),r=K(this._table.fcns.length,2,this._table.types,2,1,0,V([o,m]),1,0),r>=0?h=this._table.fcns[r]:h=this._table.default,this._apply(h,J(i,1,l),s.dims),l});X.exports=c});var lr=Y();module.exports=lr;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map

"use strict";var b=function(r,e){return function(){return e||r((e={exports:{}}).exports,e),e.exports}};var k=b(function(cr,x){x.exports={dims:null}});var S=b(function(wr,A){"use strict";var rr=require("@stdlib/assert-is-plain-object"),D=require("@stdlib/assert-has-own-property"),er=require("@stdlib/assert-is-integer-array").primitives,tr=require("@stdlib/assert-is-empty-collection"),ar=require("@stdlib/ndarray-base-to-unique-normalized-indices"),F=require("@stdlib/array-base-join"),ir=require("@stdlib/array-base-assert-contains"),w=require("@stdlib/string-format");function nr(r,e,d,a){var s;if(!rr(a))return new TypeError(w("invalid argument. Options argument must be an object. Value: `%s`.",a));if(D(a,"dims")){if(r.dims=a.dims,!er(r.dims)&&!tr(r.dims))return new TypeError(w("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",r.dims));if(s=ar(r.dims,e-1),s===null)return new RangeError(w("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",F(r.dims,",")));if(s.length!==r.dims.length)return new Error(w("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",F(r.dims,",")));r.dims=s}return D(a,"dtype")&&(r.dtype=a.dtype,!ir(d,r.dtype))?new TypeError(w('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"dtype",F(d,'", "'),r.dtype)):null}A.exports=nr});var I=b(function(qr,C){"use strict";function sr(r,e,d,a,s,i,p,l,y){var u,v,m,n;for(u=i,m=0;m<r;m++){for(v=y,n=0;n<e&&d[u+n*s]===p[v];n++)v+=l;if(n===e)return m;u+=a}return-1}C.exports=sr});var M=b(function(br,$){"use strict";var U=require("@stdlib/utils-define-nonenumerable-read-only-property"),P=require("@stdlib/assert-has-property"),_=require("@stdlib/assert-is-ndarray-like"),z=require("@stdlib/assert-is-object"),ur=require("@stdlib/assert-is-function"),T=require("@stdlib/assert-is-collection"),N=require("@stdlib/assert-is-empty-collection"),or=require("@stdlib/assert-is-function-array"),R=require("@stdlib/ndarray-base-assert-is-data-type"),dr=require("@stdlib/ndarray-base-assert-is-output-data-type-policy"),pr=require("@stdlib/ndarray-base-assert-is-input-casting-policy"),E=require("@stdlib/array-base-assert-contains"),B=require("@stdlib/ndarray-base-unary-strided1d"),vr=require("@stdlib/ndarray-base-unary-output-dtype"),G=require("@stdlib/ndarray-base-unary-input-casting-dtype"),V=require("@stdlib/ndarray-base-dtypes2enums"),H=require("@stdlib/ndarray-shape"),mr=require("@stdlib/ndarray-ndims"),q=require("@stdlib/ndarray-base-dtype"),O=require("@stdlib/ndarray-base-order"),lr=require("@stdlib/ndarray-base-assign"),J=require("@stdlib/ndarray-base-empty"),yr=require("@stdlib/ndarray-empty"),K=require("@stdlib/array-base-zero-to"),j=require("@stdlib/array-base-join"),fr=require("@stdlib/array-base-copy"),Q=require("@stdlib/array-base-insert-at"),L=require("@stdlib/array-base-every-by"),W=require("@stdlib/object-assign"),o=require("@stdlib/string-format"),X=k(),Y=S(),Z=I();function c(r,e,d,a,s){var i,p;if(!(this instanceof c))return arguments.length>4?new c(r,e,d,a,s):new c(r,e,d,a);if(!z(r))throw new TypeError(o("invalid argument. First argument must be an object. Value: `%s`.",r));if(!ur(r.default))throw new TypeError(o('invalid argument. First argument must be an object having a "default" property and an associated method.'));if(P(r,"types")&&!T(r.types)&&!N(r.types))throw new TypeError(o('invalid argument. First argument must be an object having a "types" property whose associated value is an array-like object.'));if(P(r,"fcns")&&!or(r.fcns)&&!N(r.fcns))throw new TypeError(o('invalid argument. First argument must be an object having a "fcns" property whose associated value is an array-like object containing functions.'));if(!T(e))throw new TypeError(o("invalid argument. Second argument must be an array-like object. Value: `%s`.",e));for(p=0;p<e.length;p++)if(i=e[p],!T(i)||i.length<1||!L(i,R))throw new TypeError(o("invalid argument. Second argument must contain arrays of data types. Value: `%s`.",e));if(!T(d)||d.length<1||!L(d,R))throw new TypeError(o("invalid argument. Third argument must be an array of data types. Value: `%s`.",d));if(!z(a))throw new TypeError(o("invalid argument. Fourth argument must be an object. Value: `%s`.",a));if(!dr(a.output))throw new TypeError(o("invalid argument. Fourth argument must be an object having a supported output data type policy. Value: `%s`.",a.output));if(!pr(a.casting))throw new TypeError(o("invalid argument. Fourth argument must be an object having a supported casting policy. Value: `%s`.",a.casting));if(this._table={default:r.default,types:r.types?V(r.types):[],fcns:r.fcns?fr(r.fcns):[]},this._table.types.length!==this._table.fcns.length*2)throw new Error("invalid argument. First argument specifies an unexpected number of types. A pair of input and output ndarray data types must be specified for each provided strided function.");return this._idtypes=e,this._odtypes=d,this._policies={output:a.output,casting:a.casting},arguments.length>4?this._apply=B.factory(s):this._apply=B,this}U(c.prototype,"apply",function(e){var d,a,s,i,p,l,y,u,v,m,n,g,h,f,t;if(a=arguments.length,!_(e))throw new TypeError(o("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",e));if(u=q(e),!E(this._idtypes[0],u))throw new TypeError(o('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',j(this._idtypes[0],'", "'),u));for(s=[e],t=1;t<a&&(y=arguments[t],!!_(y));t++){if(n=q(y),!E(this._idtypes[t],n))throw new TypeError(o('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',t,j(this._idtypes[t],'", "'),n));s.push(y)}if(t<a-1)throw new TypeError(o("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",t,arguments[t]));if(l=H(e),h=l.length,i=W({},X),a>t&&(d=arguments[a-1],p=Y(i,h,this._odtypes,d),p))throw p;return i.dims===null&&(i.dims=K(h)),v=i.dtype||vr(u,this._policies.output),f=yr(l,{dtype:v,order:O(e)}),n=G(u,v,this._policies.casting),u!==n&&(m=J(n,l,O(e)),lr([e,m]),s[0]=m,u=n),t=Z(this._table.fcns.length,2,this._table.types,2,1,0,V([u,v]),1,0),t>=0?g=this._table.fcns[t]:g=this._table.default,this._apply(g,Q(s,1,f),i.dims),f});U(c.prototype,"assign",function r(e){var d,a,s,i,p,l,y,u,v,m,n,g,h,f,t;if(a=arguments.length,!_(e))throw new TypeError(o("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",e));if(u=q(e),!E(this._idtypes[0],u))throw new TypeError(o('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',j(this._idtypes[0],'", "'),u));for(i=[e],t=1;t<a&&(p=arguments[t],!!_(p));t++)i.push(p);if(t<2)throw new TypeError(o("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",arguments[1]));if(t===a-1)d=arguments[t],y=!0;else if(t<a-1)throw new TypeError(o("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",t,arguments[t]));for(f=i.pop(),t=1;t<i.length;t++)if(n=q(i[t]),!E(this._idtypes[t],n))throw new TypeError(o('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',t,j(this._idtypes[t],'", "'),n));if(g=mr(e),s=W({},X),y&&(l=Y(s,g,this._odtypes,d),l))throw l;return s.dims===null&&(s.dims=K(g)),v=q(f),n=G(u,v,this._policies.casting),u!==n&&(m=J(n,H(e),O(e)),r([e,m]),i[0]=m,u=n),t=Z(this._table.fcns.length,2,this._table.types,2,1,0,V([u,v]),1,0),t>=0?h=this._table.fcns[t]:h=this._table.default,this._apply(h,Q(i,1,f),s.dims),f});$.exports=c});var gr=M();module.exports=gr;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
